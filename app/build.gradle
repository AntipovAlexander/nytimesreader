plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
}

apply from: rootProject.file('gradle/android/android.gradle')

android {
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.compose
    }
}

dependencies {
    // Hilt
    implementation(deps.dagger_hilt.android)
    kapt deps.dagger_hilt.android_compiler
    kapt deps.dagger_hilt.androidx_compiler

    // OkHttp
    implementation(
            deps.network.okhttp,
            deps.network.logging_interceptor
    )

    // Retrofit
    implementation(
            deps.retrofit.runtime,
            deps.retrofit.kotlin_serialization,
    )

    // Kotlin
    implementation(
            deps.kotlin.stdlib,
            deps.kotlin.coroutines,
            deps.kotlin.coroutines_core,
            deps.kotlin.serialization
    )

    // AndroidX
    implementation(
            deps.androidx.core,
            deps.androidx.appcompat,
            deps.androidx.material,
            deps.androidx.datastore_prefs,
            deps.androidx.datastore_core,
            deps.androidx.fragment,
            deps.androidx.activity,
            deps.androidx.activity_compose,
            deps.androidx.lifecycle_extensions,
            deps.androidx.lifecycle_livedata,
            deps.androidx.lifecycle_livedata_core,
            deps.androidx.lifecycle_livedata_vm,
            deps.androidx.lifecycle_runtime
    )

    // Compose
    implementation(
            deps.compose.ui,
            deps.compose.compiler,
            deps.compose.material,
            deps.compose.preview,
            deps.compose.system_ui_contorller
    )

    debugImplementation(deps.chucker.library)
    releaseImplementation(deps.chucker.library_no_op)

}
